import java.util.Scanner;

public class BankApplication {
	//계좌저장소
	private static Account[] accountArray = new Account[100];
	private static Scanner scanner = new Scanner(System.in);
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		boolean run = true;
		while(run) {
			System.out.println("---------------------------------");
			System.out.println("1.계좌생성|2.계좌목록|3.예금|4.출금|5.종료");
			System.out.println("---------------------------------");
			System.out.print("선택>>");
			
			int menu = scanner.nextInt();
			
			if(menu == 1) {
				createAccount();
			} else if(menu == 2) { 
				accountList();
			} else if(menu == 3) {
				deposit();
			} else if(menu == 4) {
				withdraw();
			} else if(menu == 5) {
				run = false;
			}
		}
		System.out.println("프로그램 종료");
	}
	//계좌생성하기
	private static void createAccount() {
		System.out.print("계좌 번호 : ");
		String ano = scanner.next();
		System.out.print("게좌주 :");
		String owner = scanner.next();
		System.out.print("초기입금액 : ");
		int balance = scanner.nextInt();
		
		 Account a1 = new Account(ano, owner, balance);
		 
		 for(int i=0; i<accountArray.length; i++) {
			 if(accountArray[i] == null) {
				accountArray[i] = a1;
			 	System.out.println("결과 : 계좌가 생성되었습니다.");
			 	break;
			 }
		 }
	}
	//계좌목록보기
	private static void accountList() {
		for(int i=0; i<accountArray.length; i++) {
			Account account = accountArray[i];
			if(account != null) {
				System.out.print(account.getAno());
				System.out.print("\t");
				System.out.print(account.getOwner());
				System.out.print("\t");
				System.out.println(account.getBalance());
					
			}
		}
	}
	//예금하기
	private static void deposit() {
		System.out.print("계좌번호: ");
		String ano = scanner.next();
		System.out.print("예금액: ");
		int money = scanner.nextInt();
		
		Account account = findAccount(ano);
		if(account == null) {
			System.out.println("결과 : 계좌가 없습니다.");
			return;
		}
		account.setBalance(account.getBalance() + money);
		System.out.println("결과:입금이 성공되었습니다.");
	}
	//출글하기
	private static void withdraw() {
		System.out.print("계좌번호: ");
		String ano = scanner.next();
		System.out.print("출금액: ");
		int money = scanner.nextInt();
		
		Account account = findAccount(ano);
		if(account == null) {
			System.out.println("결과 : 계좌가 없습니다.");
			return;
		}
		account.setBalance(account.getBalance() - money);
		System.out.println("결과:출금이 성공되었습니다.");
		
	}
	//Account 배열에서 ano와 동일한 Account객체 찾기
	private static Account findAccount(String ano) {
		Account account = null;
		for(int i=0; i<accountArray.length; i++) {
			if(accountArray[i] != null) {
				String dbAno = accountArray[i].getAno();
				if(dbAno.equals(ano)) {
					account = accountArray[i];
					break;
				}
			}
		}
		return account;
		
	}
}
